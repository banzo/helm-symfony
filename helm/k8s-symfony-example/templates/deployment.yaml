apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-symfony-example.fullname" . }}
  labels:
{{ include "k8s-symfony-example.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "k8s-symfony-example.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "k8s-symfony-example.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}-php-fpm
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: code
              mountPath: /var/www/html
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
 #         livenessProbe:
 #           httpGet:
 #             path: /
 #             port: http
 #         readinessProbe:
 #           httpGet:
 #             path: /
 #             port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          lifecycle:
            postStart:
              exec:
                # copies the app code in the php-fpm image to the volume
                command: ["/bin/sh", "-c", "cp -r /app/. /var/www/html"]
        - name: {{ .Chart.Name }}-nginx
          image: nginx:1.17-alpine
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
 #         livenessProbe:
 #           httpGet:
 #             path: /
 #             port: http
 #         readinessProbe:
 #           httpGet:
 #             path: /
 #             port: http
          resources:
              {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/
            - name: code
              mountPath: /app
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ template "k8s-symfony-example.fullname" . }}
        - name: code
          emptyDir: {}
